---
layout: post
title:  "JavaScript Coding Style"
date:   2015-01-19 14:38:32
categories: javascript
---

The following borrows heavily from ['Node.js Style Guide'](https://github.com/felixge/node-style-guide) by [Felix Geisend√∂rfer's](http://felixge.de) which is licensed under
the [CC BY-SA 3.0](http://creativecommons.org/licenses/by-sa/3.0/) license.

1. Spaces, not tabs. Four spaces.
1. No trailing whitespace.
1. Use Semicolons.
1. Use single quotes
1. Opening braces go on the same line


## Use four spaces for indention. Not tabs.

Use four spaces for indenting your code and swear an oath to never mix tabs and
spaces - a special kind of hell is awaiting you otherwise.

## No trailing whitespace

Just like you brush your teeth after every meal, you clean up any trailing
whitespace in your JS files before committing. Otherwise the rotten smell of
careless neglect will eventually drive away contributors and/or co-workers.

## Use Semicolons

According to [scientific research][hnsemicolons], the usage of semicolons is
a core value of our community. Consider the points of [the opposition][], but
be a traditionalist when it comes to abusing error correction mechanisms for
cheap syntactic pleasures.

[the opposition]: http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding
[hnsemicolons]: http://news.ycombinator.com/item?id=1547647

## 80 characters per line

Limit your lines to 80 characters. Yes, screens have gotten much bigger over the
last few years, but your brain has not. Use the additional room for split screen,
your editor supports that, right?

## Use single quotes

Use single quotes, unless you are writing JSON.

*Right:*

{% highlight js %}
var foo = 'bar';
{% endhighlight %}

*Wrong:*

{% highlight js %}
var foo = "bar";
{% endhighlight %}

## Opening braces go on the same line

Your opening braces go on the same line as the statement.

*Right:*

{% highlight js %}
if (true) {
  console.log('winning');
}
{% endhighlight %}

*Wrong:*

{% highlight js %}
if (true)
{
  console.log('losing');
}
{% endhighlight %}

Also, notice the use of whitespace before and after the condition statement.

## Method chaining

One method per line should be used if you want to chain methods.

You should also indent these methods so it's easier to tell they are part of the same chain.

*Right:*

{% highlight js %}
User
  .findOne({ name: 'foo' })
  .populate('bar')
  .exec(function(err, user) {
    return true;
  });
{% endhighlight %}

*Wrong:*

{% highlight js %}
User
.findOne({ name: 'foo' })
.populate('bar')
.exec(function(err, user) {
  return true;
});

User.findOne({ name: 'foo' })
  .populate('bar')
  .exec(function(err, user) {
    return true;
  });

User.findOne({ name: 'foo' }).populate('bar')
.exec(function(err, user) {
  return true;
});

User.findOne({ name: 'foo' }).populate('bar')
  .exec(function(err, user) {
    return true;
  });
{% endhighlight %}









{% highlight js %}
alert('hello');
{% endhighlight %}

[node-style]: https://github.com/felixge/node-style-guide
[felix]: http://felixge.de/
